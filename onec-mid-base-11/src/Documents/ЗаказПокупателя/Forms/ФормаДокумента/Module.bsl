
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Рагозина А.В. {{ 
	//Добавлениее команды на форму
	КомандаПересчитать = Команды.Добавить("нов_Пересчитать");
	КомандаПересчитать.Заголовок = "Пересчитать";
	КомандаПересчитать.Действие = "нов_КомандаПересчитать"; 
	
	КнопкаПересчитать = Элементы.Вставить("нов_КнопкаПересчитать",Тип("КнопкаФормы"),ЭтотОбъект,Элементы.Страницы);
	КнопкаПересчитать.ИмяКоманды = "нов_Пересчитать";
	КнопкаПересчитать.Вид = ВидКнопкиФормы.ОбычнаяКнопка;    
	
	//Добавлениее группы на форму
	Группа = Элементы.Вставить("нов_ГруппаДобавленныхСвойств",Тип("ГруппаФормы"),ЭтотОбъект,КнопкаПересчитать);
	Группа.Заголовок = "Добавленные свойства";
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	
	//Добавлениее поля ввода на форму
	ПолеВводаСС = Элементы.Добавить("нов_ПолеВводаСогласованнойСкидки",Тип("ПолеФормы"),Элементы.ГруппаШапкаЛево);
	ПолеВводаСС.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВводаСС.ПутьКДанным = "Объект.нов_СогласованнаяСкидка";
	ПолеВводаСС.Заголовок = "Согласованная скидка";
	ПолеВводаСС.УстановитьДействие("ПриИзменении","нов_ПриИзмененииСогласованнойСкидкиНаФорме");

	// }} Рагозина А.В.
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура нов_ПриИзмененииСогласованнойСкидкиНаФорме(Элемент)
	// Рагозина А.В. {{ 	
	Если Объект.Товары.Количество() = 0 Тогда 
		Возврат;
	Иначе 
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("нов_ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение,"Пересчитать?",Режим,0,,"Предупреждение");
		
	КонецЕсли;
	// }} Рагозина А.В.	
КонецПроцедуры      

&НаКлиенте
Процедура нов_ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	Иначе
		нов_КомандаПересчитатьСуммы(); 
		РассчитатьСуммуДокумента();
	КонецЕсли;    
КонецПроцедуры

&НаКлиенте
Процедура нов_КомандаПересчитатьСуммы()
	// Рагозина А.В. {{
	Для Каждого стрТ из Объект.Товары Цикл 
		нов_КомандаПересчитатьСуммуВСтроке(стрТ);
	КонецЦикла;
	Для Каждого стрУ из Объект.Услуги Цикл 
		нов_КомандаПересчитатьСуммуВСтроке(стрУ);	
	КонецЦикла;
	// }} Рагозина А.В.
КонецПроцедуры

&НаКлиенте
Процедура нов_КомандаПересчитатьСуммуВСтроке(Знач стр)
	// Рагозина А.В. {{  
	ОбщаяСкидка = Объект.нов_СогласованнаяСкидка + стр.Скидка;
	Если ОбщаяСкидка > 100 Тогда 
		ПоказатьПредупреждение(,"Общая скидка составила более 100%!",,"Внимание!");
		Возврат;
	КонецЕсли;
	стр.Сумма = стр.Цена * стр.Количество * (1 - ОбщаяСкидка /100);  
	// }} Рагозина А.В.
КонецПроцедуры 

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
